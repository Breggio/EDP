%% Comparison of the exponential and running mean for random walk model

close all; clear all; clc;

set(0,'defaulttextInterpreter','latex');
set(groot,'defaultAxesTickLabelInterpreter','latex');
set(groot,'defaultLegendInterpreter','latex');

%% First part: Determination of optimal smoothing constant in exponential mean 

sigma_w2 = 12;
sigma_eta = 9;

n_1 = 300;
n_2 = 3000;

incond = 10;

[x_1, x_hat_1, z_1, alpha_1, sigma_eta2_1, sigma_w2_1] = smoother(n_1, sigma_w2, sigma_eta, incond);
[x_2, x_hat_2, z_2, alpha_2, sigma_eta2_2, sigma_w2_2] = smoother(n_2, sigma_w2, sigma_eta, incond);

sigma_w2_1
sigma_w2_2

sigma_eta2_1
sigma_eta2_2

% increasing the number of steps, we are getting closer to the real (given) 
% sigma and eta

figure(1)
plot(x_1, 'c', 'LineWidth', 1.2)
hold on
plot(x_hat_1, 'k', 'LineWidth', 1.2)
plot(z_1, 'm', 'LineWidth', 1.2)
grid on; grid minor
xlabel('Steps', 'FontSize', 30)
ylabel('Data', 'FontSize', 30)
legend('True Data', 'Smoothed Data', 'Measurements', 'FontSize', 30)

figure(2)
plot(x_2, 'c', 'LineWidth', 1.2)
hold on
plot(x_hat_2, 'k', 'LineWidth', 1.2)
plot(z_2, 'm', 'LineWidth', 1.2)
grid on; grid minor
xlabel('Steps', 'FontSize', 30)
ylabel('Data', 'FontSize', 30)
legend('True Data', 'Smoothed Data', 'Measurements', 'FontSize', 30) 

%% Second Part: Comparison of methodical errors of exponential and running mean. 

% 1-2-3) Generate a true trajectory using: 
% - the random walk model
% - using equation (2) {z(i)}
% 3) Determine optimal smoothing coefficient ùõº

n_3 = 300; % size of trajectory
incond = 10; % initial condition
x_n(1) = 10;

sigma_w_n = 28^2; % variance noise
sigma_eta_n = 97^2; % variance of noise measurement

a_1_n = sqrt(sigma_w_n);
a_2_n = sqrt(sigma_eta_n);

w_n = a_1_n.*randn(n_3,1);
eta_n = a_2_n.*randn(n_3,1);

for i = 2:n_3
    x_n(i) = x_n(i-1) + w_n(i); % generated trajectory RWM
end

for i=1:n_3
    z_n(i) = x_n(i) + eta_n(i); % Generate measurements ùëßùëñ of the process ùëãùëñ 
end

csi_n = sigma_w_n / sigma_eta_n;
alpha_n = (-csi_n + sqrt(csi_n^2 + 4*csi_n))/2; % correct bc should be between 0,1


